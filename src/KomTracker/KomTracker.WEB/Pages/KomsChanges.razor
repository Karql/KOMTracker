@page "/last-koms-changes"
@using KomTracker.API.Shared.ViewModels.Club
@using KomTracker.API.Shared.ViewModels.Stats
@using KomTracker.Application.Shared.Helpers
@using KomTracker.WEB.Helpers
@using KomTracker.WEB.Settings
@attribute [Authorize]

@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudGrid Class="mb-2">
        <MudItem xs="12" sm="3">
            <MudSelect
                T="ClubViewModel"                
                Label="Club" 
                Class="club-select"
                Variant="Variant.Outlined" 
                AnchorOrigin="Origin.BottomCenter"
                Clearable="true"
                ValueChanged="@SelectedClubChanged"> 
                @foreach (var club in _clubs)
                {
                    <MudSelectItem Value="@club">
                        <div class="d-flex align-center club-select-item-wrapper">
                            <img src="@ViewHelper.GetClubAvatar(club.ProfileMedium)" class="club-select-profile-medium mr-2" /> @club.Name
                        </div>
                    </MudSelectItem>
                }
            </MudSelect>
        </MudItem>
    </MudGrid>



    <MudTable Hover="true" Elevation="25" Items="_changes" Dense="false" Bordered="false" Striped="true" Filter="new Func<EffortWithAthleteViewModel, bool>(SearchChanges)" @bind-kom="_change">
        <ToolBarContent>
            <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="Search for changes (segment, athlete)" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Athlete.FullName)">Athlete</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.SummarySegmentEffort.TrackDate)">Change date</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.Segment.Name)">Segment name</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.Segment.Distance)">Distance</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.Segment.ElevationHigh - x.Effort.Segment.ElevationLow)">Elev diff</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.Segment.AverageGrade)">Grade</MudTableSortLabel></MudTh>            
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.SegmentEffort.StartDate)">Date</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.SegmentEffort.Speed)">Speed</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.SegmentEffort.AverageHeartrate ?? 0)">HR</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.SegmentEffort.AverageWatts ?? 0)">Power</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.SegmentEffort.ElapsedTime)">Time</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => x.Effort.Segment.ExtendedCategory)">Cat</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<EffortWithAthleteViewModel, object>(x => ActivityTypeHelper.GetActivityTypeOrder(x.Effort.Segment.ActivityType))">Type</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Change type">
                <div class="d-flex align-center">
                    @if (@context.Effort.SummarySegmentEffort.NewKom) {
                        <MudIcon Icon="@Icons.Material.Filled.Add" Color="Color.Success" Size="Size.Medium"></MudIcon>
                    }
                    @if (@context.Effort.SummarySegmentEffort.LostKom) {
                        <MudIcon Icon="@Icons.Material.Filled.Remove" Color="Color.Error" Size="Size.Medium"></MudIcon>
                    }
                    @if (@context.Effort.SummarySegmentEffort.ImprovedKom) {
                        <MudIcon Icon="@Icons.Material.Filled.ArrowUpward" Color="Color.Info" Size="Size.Medium"></MudIcon>
                    }
                    @if (@context.Effort.SummarySegmentEffort.ReturnedKom) {
                        <MudIcon Icon="@Icons.Material.Filled.ArrowBack" Color="Color.Dark" Size="Size.Medium"></MudIcon>
                    }
                </div>
            </MudTd>
            <MudTd DataLabel="Athlete">
                <div class="d-flex align-center">
                    <MudAvatar Size="Size.Small" Class="mr-4">
                        <MudImage Src="@context.Athlete.ProfileMedium" />
                    </MudAvatar>
                    <MudLink Target="_blank" Href="@($"https://strava.com/athletes/{context.Athlete.AthleteId}")"><MudHighlighter Text="@context.Athlete.FullName" HighlightedText="@_searchString" /></MudLink>
                </div>
            </MudTd>
            <MudTd DataLabel="Change date">
                @context.Effort.SummarySegmentEffort.TrackDate.ToString("yyyy-MM-dd")
            </MudTd>
            <MudTd DataLabel="Name">
                <MudLink Target="_blank" Href="@($"https://strava.com/segment_efforts/{context.Effort.SegmentEffort.Id}")"><MudHighlighter Text="@context.Effort.Segment.Name" HighlightedText="@_searchString" /></MudLink>
            </MudTd>
            <MudTd DataLabel="Distnce">
                @((context.Effort.Segment.Distance / 1000).ToString("F2")) km
            </MudTd>
             <MudTd DataLabel="Elev diff">
                @((context.Effort.Segment.ElevationHigh - context.Effort.Segment.ElevationLow).ToString("F0")) m
            </MudTd>
            <MudTd DataLabel="Grade">
                @context.Effort.Segment.AverageGrade.ToString("F1")%
            </MudTd>
            <MudTd DataLabel="Date">
                @context.Effort.SegmentEffort.StartDate.ToString("yyyy-MM-dd")
            </MudTd>
            <MudTd DataLabel="Speed">
                @context.Effort.SegmentEffort.Speed.ToString("F1")km/h
            </MudTd>
            <MudTd DataLabel="HR">
                @((context.Effort.SegmentEffort.AverageHeartrate ?? 0) == 0 ? "-" : context.Effort.SegmentEffort.AverageHeartrate!.Value.ToString("F0"))
            </MudTd>
            <MudTd DataLabel="Power" >
                <span class="d-flex align-center">
                @((context.Effort.SegmentEffort.AverageWatts ?? 0) == 0 ? "-" : context.Effort.SegmentEffort.AverageWatts!.Value.ToString("F0") + "W")
                @if (context.Effort.SegmentEffort.DeviceWatts)
                {
                    <MudIcon Icon="@Icons.Material.Filled.Bolt"></MudIcon>
                }
                </span>
            </MudTd>
            <MudTd DataLabel="Time">
                @(TimeSpan.FromSeconds(context.Effort.SegmentEffort.ElapsedTime).ToString())                
            </MudTd>
            <MudTd DataLabel="Cat">
                <div class="d-flex align-center justify-space-between climb-category" style="background-color: @ViewHelper.GetExtendedCategoryColor(context.Effort.Segment.ExtendedCategory)">
                    <MudIcon  Icon="@Icons.Material.Filled.Landscape"></MudIcon>
                    <span>@context.Effort.Segment.ExtendedCategoryText</span>
                </div>
            </MudTd>
            <MudTd DataLabel="Type">
                <MudTooltip Text="@ActivityTypeHelper.GetActivityTypeName(context.Effort.Segment.ActivityType)">
                    <MudIcon Icon="@ViewHelper.GetActivityTypeIcon(context.Effort.Segment.ActivityType)"></MudIcon>
                </MudTooltip>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>    
}