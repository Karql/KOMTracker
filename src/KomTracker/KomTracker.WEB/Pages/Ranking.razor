@page "/ranking"
@using KomTracker.API.Shared.ViewModels.Club
@using KomTracker.API.Shared.ViewModels.Ranking
@using KomTracker.Application.Shared.Helpers
@using KomTracker.Application.Shared.Models.Segment
@using KomTracker.WEB.Helpers
@using KomTracker.WEB.Settings
@attribute [Authorize]

@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudGrid Class="mb-2">
        <MudItem xs="12" sm="3">
            <MudSelect
                T="RankingType"
                @bind-Value="_rankingType"
                Label="Ranking type" 
                Variant="Variant.Outlined" 
                AnchorOrigin="Origin.BottomCenter">
                    @foreach (var rt in _rankingTypes)
                    {
                        <MudSelectItem Value="@rt.Value">
                            @rt.Label
                        </MudSelectItem>
                    }
            </MudSelect>
        </MudItem>
        <MudItem xs="12" sm="3">
            <MudSelect
                T="ClubViewModel"                
                Label="Club" 
                Class="club-select"
                Variant="Variant.Outlined" 
                AnchorOrigin="Origin.BottomCenter"
                Clearable="true"
                ValueChanged="@SelectedClubChanged"> 
                @foreach (var club in _clubs)
                {
                    <MudSelectItem Value="@club">
                        <div class="d-flex align-center club-select-item-wrapper">
                            <img src="@ViewHelper.GetClubAvatar(club.ProfileMedium)" class="club-select-profile-medium mr-2" /> @club.Name
                        </div>
                    </MudSelectItem>
                }
            </MudSelect>
        </MudItem>
    </MudGrid>

    <MudTable Hover="true" Elevation="25" Items="_ranking" Dense="false" Bordered="false" Striped="true" Filter="new Func<AthleteRankingViewModel, bool>(SearchRanking)" @bind-kom="_item">
        <ToolBarContent>
            <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="Search for changes (athlete)" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<AthleteRankingViewModel, object>(x => x.Athlete.FullName)">Athlete</MudTableSortLabel></MudTh>
            @if (_rankingType == RankingType.Total)
            {
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Descending" SortBy="new Func<AthleteRankingViewModel, object>(x => x.Total.KomsCount)">Koms</MudTableSortLabel></MudTh>
                @foreach(var cat in _extendedCategories)
                {
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<AthleteRankingViewModel, object>(x => x.Total.GetKomsCountByCategory(cat))">                        
                            @SegmentHelper.GetExtendedCategoryText(cat)
                        </MudTableSortLabel>
                    </MudTh>
                }
            }
            @if (_rankingType == RankingType.KomsChanges)
            {
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Descending" SortBy="new Func<AthleteRankingViewModel, object>(x => x.KomsChangesThisWeek.NewKomsCount)">New this week </MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<AthleteRankingViewModel, object>(x => x.KomsChangesThisWeek.LostKomsCount)">Lost this week</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<AthleteRankingViewModel, object>(x => x.KomsChangesLastWeek.NewKomsCount)">New last week</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<AthleteRankingViewModel, object>(x => x.KomsChangesLastWeek.LostKomsCount)">Lost last week</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<AthleteRankingViewModel, object>(x => x.KomsChanges30Days.NewKomsCount)">New last 30 days</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<AthleteRankingViewModel, object>(x => x.KomsChanges30Days.LostKomsCount)">Lost last 30 days</MudTableSortLabel></MudTh>
            }
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Athlete">
                <div class="d-flex align-center">
                    <MudAvatar Size="Size.Small" Image="@context.Athlete.ProfileMedium" Class="mr-4" /> 
                    <MudLink Target="_blank" Href="@($"https://strava.com/athletes/{context.Athlete.AthleteId}")"><MudHighlighter Text="@context.Athlete.FullName" HighlightedText="@_searchString" /></MudLink>
                </div>
            </MudTd>
            @if (_rankingType == RankingType.Total)
            {
                <MudTd DataLabel="Koms">
                    @context.Total.KomsCount
                </MudTd>

                @foreach (var cat in _extendedCategories)
                {
                    <MudTd DataLabel="@SegmentHelper.GetExtendedCategoryText(cat)">
                        @context.Total.GetKomsCountByCategory(cat)
                    </MudTd>
                }
            }
            @if (_rankingType == RankingType.KomsChanges)
            {
                <MudTd DataLabel="New this week">
                    <MudText Color="Color.Success" Typo="Typo.body2">@context.KomsChangesThisWeek.NewKomsCount</MudText>                    
                </MudTd>
                <MudTd DataLabel="Lost this week">
                    <MudText Color="Color.Error" Typo="Typo.body2">@context.KomsChangesThisWeek.LostKomsCount</MudText>      
                </MudTd>
                <MudTd DataLabel="New last week">
                    <MudText Color="Color.Success" Typo="Typo.body2">@context.KomsChangesLastWeek.NewKomsCount</MudText>     
                </MudTd>
                <MudTd DataLabel="Lost last week">
                    <MudText Color="Color.Error" Typo="Typo.body2">@context.KomsChangesLastWeek.LostKomsCount</MudText>
                </MudTd>
                <MudTd DataLabel="New last 30 days">
                    <MudText Color="Color.Success" Typo="Typo.body2">@context.KomsChanges30Days.NewKomsCount</MudText>     
                </MudTd>
                <MudTd DataLabel="Lost last 30 days">
                    <MudText Color="Color.Error" Typo="Typo.body2">@context.KomsChanges30Days.LostKomsCount</MudText>
                </MudTd>
            }
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>    
}